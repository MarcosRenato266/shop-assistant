type Price {
  id: ID!
  author: Int
  moneyCheap: String
  moneyIndicated: String
  moneyExpensive: String
  gemsCheap: String
  gemsIndicated: String
  gemsExpensive: String
  worksCounter: Int
  priceFromBuild: Build
}

input NewPriceInput {
  author: Int
  moneyCheap: String!
  moneyIndicated: String!
  moneyExpensive: String!
  gemsCheap: String!
  gemsIndicated: String!
  gemsExpensive: String!
  priceFromBuildId: ID!
}

input priceWorksCountIncreaseInput {
  priceId: ID!
}

type Query {
  priceById(priceId: String!): Price,
  priceByBuildId(buildId: String!): Price
}

type Mutation {
  newPrice(input: NewPriceInput!): Price,
  priceWorksCountIncrease(input: priceWorksCountIncreaseInput!): Price
}